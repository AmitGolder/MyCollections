// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCollections.Data;

namespace MyCollections.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250202141804_SeededDatabase")]
    partial class SeededDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyCollections.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "PORSCHE"
                        },
                        new
                        {
                            Id = 2,
                            Name = "McLAREN"
                        },
                        new
                        {
                            Id = 3,
                            Name = "HONDA"
                        },
                        new
                        {
                            Id = 4,
                            Name = "TYOTA"
                        },
                        new
                        {
                            Id = 5,
                            Name = "NISSAN"
                        },
                        new
                        {
                            Id = 6,
                            Name = "MAZDA"
                        });
                });

            modelBuilder.Entity("MyCollections.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 2,
                            ImagePath = "/images/mclaren f1.jpg",
                            Name = "McLAREN F1",
                            ProductNo = "HTB11",
                            Year = 2025
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 3,
                            ImagePath = "/images/honda s800 racing.jpg",
                            Name = "HONDA S800 RACING",
                            ProductNo = "HRY58",
                            Year = 2025
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 4,
                            ImagePath = "/images/94 toyota supra.jpg",
                            Name = "94 TYOTA SUPRA",
                            ProductNo = "HTF27",
                            Year = 2025
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 6,
                            ImagePath = "/images/95 mazda rx-7.jpg",
                            Name = "95 MAZDA RX-7",
                            ProductNo = "HTD97",
                            Year = 2025
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 1,
                            ImagePath = "/images/96 porsche carrera.jpg",
                            Name = "96 PORSCHE CARRERA",
                            ProductNo = "HTF01",
                            Year = 2025
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 6,
                            ImagePath = "/images/91 mazda mx-5 miata.jpg",
                            Name = "91 MAZDA MX-5 MIATA",
                            ProductNo = "HTD80",
                            Year = 2025
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 5,
                            ImagePath = "/images/nissan skyline gt-r.jpg",
                            Name = "NISSAN SKYLINE GT-R",
                            ProductNo = "HYY72",
                            Year = 2025
                        });
                });

            modelBuilder.Entity("MyCollections.Models.Car", b =>
                {
                    b.HasOne("MyCollections.Models.Brand", "Brand")
                        .WithMany("Cars")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("MyCollections.Models.Brand", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
